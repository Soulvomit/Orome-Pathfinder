     1                                  [BITS 64]
     2                                  [SECTION .data]
     3                                  ;Node
     4                                  [GLOBAL Node.Position.Y]
     5                                  [GLOBAL Node.Position.X]
     6                                  [GLOBAL Node.Resistance]
     7                                  [GLOBAL Node.Traversable]
     8                                  [GLOBAL Node.Closed]
     9                                  [GLOBAL Node.GCost]
    10                                  [GLOBAL Node.HCost]
    11                                  [GLOBAL Node.FCost]
    12                                  [GLOBAL Node.ID]
    13                                  [GLOBAL Node.PParent]
    14                                  [GLOBAL Node.PNext]
    15                                  [GLOBAL Node.Size]
    16                                  [GLOBAL Node.BaseCost]
    17                                  [GLOBAL Node.AdjecentOffsets]
    18                                  ;NodeStack
    19                                  [GLOBAL NodeStack.Top]
    20                                  [GLOBAL NodeStack.Bottom]
    21                                  [GLOBAL NodeStack.Count]
    22                                  ;NodeOpenList
    23                                  [GLOBAL NodeOpenList.First]
    24                                  [GLOBAL NodeOpenList.Last]
    25                                  [GLOBAL NodeOpenList.Count]
    26                                  ;Grid
    27                                  [GLOBAL Grid.StartX]
    28                                  [GLOBAL Grid.StartY]
    29                                  [GLOBAL Grid.PStartNode]
    30                                  [GLOBAL Grid.TargetX]
    31                                  [GLOBAL Grid.TargetY]
    32                                  [GLOBAL Grid.PMap]
    33                                  [GLOBAL Grid.MapWidth]
    34                                  [GLOBAL Grid.MapHeight]
    35                                  [GLOBAL Grid.POutBuffer]
    36                                  [GLOBAL Grid.OutBufferSize]
    37                                  ;TEST
    38                                  [GLOBAL Map]
    39                                  [GLOBAL OutBuffer]
    40                                  [DEFAULT REL]
    41                                  ALIGN 8
    42                                  
    43                                  Node:
    44                                  	;add more offset accessors for supplied data here if needed.
    45                                  	;const: offsets accessors for supplied data:
    46                                  	.Position.Y:	equ 	8*10	;8*10 = 80
    47                                  	.Position.X:	equ 	8*9		;8*9 = 72
    48                                  	;const: offsets accessors:
    49                                  	.Resistance:	equ		8*8		;8*8 = 64
    50                                  	.Traversable:	equ		8*7		;8*7 = 56
    51                                  	.Closed:		equ		8*6		;8*6 = 48
    52                                  	.GCost:			equ		8*5		;8*5 = 40
    53                                  	.HCost:			equ		8*4		;8*4 = 32
    54                                  	.FCost:			equ 	8*3		;8*3 = 24
    55                                  	.ID: 			equ 	8*2		;8*2 = 16
    56                                  	.PParent:		equ 	8*1		;8*1 = 8
    57                                  	.PNext			equ		8*0		;8*0 = 0
    58                                  	;const: size of a node:
    59                                  	.Size:			equ 	8*11	;8*11= 88
    60                                  	;static: base cost of traversing a node:
    61 00000000 0100000000000000        	.BaseCost: 			dq		1
    62 00000008 010000000000000000-     	.AdjecentOffsets:	dq 		1,0, -1,0, 0,1, 0,-1, 1,1, 1,-1, -1,1, -1,-1
    62 00000011 00000000000000FFFF-
    62 0000001A FFFFFFFFFFFF000000-
    62 00000023 000000000000000000-
    62 0000002C 000000000100000000-
    62 00000035 000000000000000000-
    62 0000003E 0000FFFFFFFFFFFFFF-
    62 00000047 FF0100000000000000-
    62 00000050 010000000000000001-
    62 00000059 00000000000000FFFF-
    62 00000062 FFFFFFFFFFFFFFFFFF-
    62 0000006B FFFFFFFFFF01000000-
    62 00000074 00000000FFFFFFFFFF-
    62 0000007D FFFFFFFFFFFFFFFFFF-
    62 00000086 FFFF               
    63                                  	
    64                                  NodeStack:
    65                                  	;glob: the topmost node on stack
    66 00000088 0000000000000000        	.Top:			dq		0
    67                                  	;glob: bottom node on stack
    68 00000090 0000000000000000        	.Bottom:		dq		0
    69                                  	;glob: number of nodes on the stack
    70 00000098 0000000000000000        	.Count:			dq		0
    71                                  
    72                                  NodeOpenList:
    73                                  	;glob: the fist node in open list
    74 000000A0 0000000000000000        	.First:			dq		0
    75                                  	;glob: the last node in open list
    76 000000A8 0000000000000000        	.Last:			dq		0
    77                                  	;glob: number of nodes in open list
    78 000000B0 0000000000000000        	.Count:			dq		0
    79                                  
    80                                  Grid:
    81 000000B8 0000000000000000        	.StartX:		dq 0		
    82 000000C0 0000000000000000        	.StartY:		dq 0
    83 000000C8 0000000000000000        	.PStartNode:	dq 0
    84 000000D0 0000000000000000        	.TargetX:		dq 0
    85 000000D8 0000000000000000        	.TargetY:		dq 0
    86 000000E0 0000000000000000        	.PMap:			dq 0
    87 000000E8 0000000000000000        	.MapWidth:		dq 0
    88 000000F0 0000000000000000        	.MapHeight:		dq 0
    89 000000F8 0000000000000000        	.POutBuffer: 	dq 0
    90 00000100 0000000000000000        	.OutBufferSize: dq 0
    91                                  
    92                                  ;FOR TESTING
    93                                  ;Grid:
    94                                  ;	.StartX:		dq 0		
    95                                  ;	.StartY:		dq 0
    96                                  ;	.PStartNode:	dq 0
    97                                  ;	.TargetX:		dq 1
    98                                  ;	.TargetY:		dq 2
    99                                  ;	.PMap:			dq Map
   100                                  ;	.MapWidth:		dq 4
   101                                  ;	.MapHeight:		dq 3
   102                                  ;	.POutBuffer: 	dq OutBuffer
   103                                  ;	.OutBufferSize: dq 12
   104                                  
   105                                  ;Map:			db 1, 1, 1, 1, 
   106                                  ;				db 0, 1, 0, 1,
   107                                  ;				db 0, 1, 1, 1
   108                                  				
   109                                  ;OutBuffer:		dd 0, 0, 0, 0, 
   110                                  ;				dd 0, 0, 0, 0,
   111                                  ;				dd 0, 0, 0, 0
   112                                  
   113                                  ;Grid:
   114                                  ;	.StartX:		dq 0		
   115                                  ;	.StartY:		dq 0
   116                                  ;	.PStartNode:	dq 0
   117                                  ;	.TargetX:		dq 31
   118                                  ;	.TargetY:		dq 31
   119                                  ;	.PMap:			dq Map
   120                                  ;	.MapWidth:		dq 32
   121                                  ;	.MapHeight:		dq 32
   122                                  ;	.POutBuffer: 	dq OutBuffer
   123                                  ;	.OutBufferSize: dq 1024
   124                                  
   125                                  ;Map:	db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   126                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   127                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   128                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   129                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   130                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   131                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   132                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   133                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   134                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   135                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   136                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   137                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   138                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   139                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   140                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   141                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   142                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   143                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   144                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   145                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   146                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   147                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   148                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   149                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   150                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   151                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   152                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   153                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   154                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   155                                  ;		db 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
   156                                  ;		db 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
   157                                  
   158                                  ;OutBuffer:		
   159                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   160                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   161                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   162                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   163                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   164                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   165                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   166                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   167                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   168                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   169                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   170                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   171                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   172                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   173                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   174                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   175                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   176                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   177                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   178                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   179                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   180                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   181                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   182                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   183                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   184                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   185                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   186                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   187                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   188                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   189                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   190                                  ;		dd 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
