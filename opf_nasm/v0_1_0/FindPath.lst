     1                                  [BITS 64]
     2                                  [SECTION .text]
     3                                  [GLOBAL DllMain]
     4                                  [GLOBAL FindPath]
     5                                  [EXPORT DllMain]
     6                                  [EXPORT FindPath]
     7                                  ;From _Node:
     8                                  [EXTERN _Node.Ctor]
     9                                  [EXTERN _Node.UpdateAdjecentNode]
    10                                  [EXTERN _Node.Empty]
    11                                  [EXTERN _Node.Traceback]
    12                                  ;From _Node2D:
    13                                  [EXTERN _Node2D.GetByCoordinates]
    14                                  ;From Data - Node
    15                                  [EXTERN Node.Closed]
    16                                  [EXTERN Node.Size]
    17                                  [EXTERN Node.PNext]
    18                                  [EXTERN Node.AdjecentOffsets]
    19                                  ;From Data - NodeStack
    20                                  [EXTERN NodeStack.Bottom]
    21                                  [EXTERN NodeStack.Count]
    22                                  ;From Data - NodeOpenList
    23                                  [EXTERN NodeOpenList.First]
    24                                  [EXTERN NodeOpenList.Last]
    25                                  [EXTERN NodeOpenList.Count]
    26                                  ;From Data - Grid
    27                                  [EXTERN Grid.TargetX]
    28                                  [EXTERN Grid.TargetY]
    29                                  [EXTERN Grid.StartX]
    30                                  [EXTERN Grid.StartY]
    31                                  [EXTERN Grid.PStartNode]
    32                                  [EXTERN Grid.MapWidth]
    33                                  [EXTERN Grid.MapHeight]
    34                                  [EXTERN Grid.POutBuffer]
    35                                  [EXTERN Grid.OutBufferSize]
    36                                  [EXTERN Grid.PMap]
    37                                  [DEFAULT REL]
    38                                  
    39                                  DllMain:
    40 00000000 B900000000              	mov	ecx, 0						;nStartX@0
    41 00000005 BA00000000              	mov edx, 0						;nStartY@8
    42 0000000A 41B81F000000            	mov r8d, 31						;nTargetX@16
    43 00000010 41B91F000000            	mov r9d, 31						;nTargetX@24
    44                                  	mov rax, TestData.PMap			;pMap@32
    44          ******************       error: symbol `TestData.PMap' undefined
    45 00000016 4889442420              	mov [rsp + 32], rax	
    46 0000001B B820000000              	mov eax, 32 					;nMapWidth@40
    47 00000020 89442428                	mov [rsp + 40], eax			
    48 00000024 B820000000              	mov eax, 32  					;nMapHeight@48
    49 00000029 89442430                	mov [rsp + 48], eax			
    50                                  	mov rax, TestData.POutBuffer	;pOutBuffer@56
    50          ******************       error: symbol `TestData.POutBuffer' undefined
    51 0000002D 4889442438              	mov [rsp + 56], rax
    52 00000032 B800040000              	mov eax, 1024					;nOutBufferSize@64
    53 00000037 89442440                	mov [rsp + 64], eax							
    54 0000003B E81B000000              	call FindPath
    55 00000040 B801000000                  mov eax, 1
    56 00000045 C3                          ret
    57                                  
    58 00000046 E810000000              	call FindPath
    59 0000004B B801000000                  mov eax, 1
    60 00000050 C3                          ret
    61                                  
    62                                  FindPath:
    63                                  	;varify grid values
    64 00000051 3B4C2430                	cmp ecx, [rsp + 48]
    65 00000055 0F8D04020000            	jge .no_path_found
    66 0000005B 83F900                  	cmp ecx, 0
    67 0000005E 0F8CFB010000            	jl .no_path_found
    68 00000064 3B542438                	cmp edx, [rsp + 56]
    69 00000068 0F8DF1010000            	jge .no_path_found
    70 0000006E 83FA00                  	cmp edx, 0
    71 00000071 0F8CE8010000            	jl .no_path_found
    72 00000077 443B442430              	cmp r8d, [rsp + 48]
    73 0000007C 0F8DDD010000            	jge .no_path_found
    74 00000082 4183F800                	cmp r8d, 0
    75 00000086 0F8CD3010000            	jl .no_path_found
    76 0000008C 443B4C2438              	cmp r9d, [rsp + 56]
    77 00000091 0F8DC8010000            	jge .no_path_found
    78 00000097 4183F900                	cmp r9d, 0
    79 0000009B 0F8CBE010000            	jl .no_path_found
    80                                  	;initialize grid
    81 000000A1 890D(00000000)          	mov dword[Grid.StartX], ecx
    82 000000A7 8915(00000000)          	mov dword[Grid.StartY], edx
    83 000000AD 448905(00000000)        	mov dword[Grid.TargetX], r8d
    84 000000B4 44890D(00000000)        	mov dword[Grid.TargetY], r9d
    85 000000BB 488B442428              	mov rax, [rsp + 40]
    86 000000C0 488905(00000000)        	mov qword[Grid.PMap], rax
    87 000000C7 488B442430              	mov rax, [rsp + 48]
    88 000000CC 8905(00000000)          	mov dword[Grid.MapWidth], eax
    89 000000D2 488B442438              	mov rax, [rsp + 56]
    90 000000D7 8905(00000000)          	mov dword[Grid.MapHeight], eax
    91 000000DD 488B442440              	mov rax, [rsp + 64]
    92 000000E2 488905(00000000)        	mov qword[Grid.POutBuffer], rax
    93 000000E9 488B442448              	mov rax, [rsp + 72]
    94 000000EE 8905(00000000)          	mov dword[Grid.OutBufferSize], eax
    95                                  	;initialize values for node creation
    96 000000F4 488925(00000000)        	mov [NodeStack.Bottom], rsp   				;Set bottom node to stack pointer
    97 000000FB 48812D(00000000)-       	sub qword [NodeStack.Bottom], Node.Size		;Add size bottom node
    97 00000102 [00000000]         
    98 00000106 4831C9                  	xor rcx, rcx								;Clean rcx
    99 00000109 4D31C0                  	xor r8, r8				 	  				;Row Counter
   100 0000010C 4D31C9                  	xor r9, r9				  					;Col Counter
   101 0000010F 4D31D2                  	xor r10, r10 				  				;Node Counter
   102 00000112 4C8B1D(00000000)        	mov r11, [Grid.PMap]			  			;Pointer to map buffer
   103 00000119 4C8B25(00000000)        	mov r12, [Grid.MapWidth]
   104 00000120 4C0FAF25(00000000)      	imul r12, [Grid.MapHeight]
   105                                  	;create nodes on stack from grid
   106                                  	.alloc:								;Entry of stack alloction loop
   107 00000128 4D39E2                  		cmp r10, r12					;Check for last node in map 
   108 0000012B 7437                    		jz .find_path					;If last node, terminate alloc loop
   109 0000012D 4C3B0D(00000000)        			cmp r9, [Grid.MapWidth] 	;Check for last node in row
   110 00000134 7426                    			jz .switch_row				;If last node in row, row switch
   111 00000136 4C89C8                  			mov rax, r9				;ARG: X
   112 00000139 4C89C3                  			mov rbx, r8				;ARG: Y
   113 0000013C 438A0C13                			mov cl, [r11+r10]		;ARG: Traversable
   114 00000140 BA01000000              			mov rdx, 1				;ARG: Resistance
   115 00000145 E8(00000000)            			call _Node.Ctor			;Call Constructor
   116 0000014A 49FFC2                  			inc r10					;Inc Node Counter
   117 0000014D 49FFC1                  			inc r9					;Inc Row Counter
   118 00000150 EBD6                    			jmp .alloc				;Continue alloc loop
   119                                  			.switch_row:				;Entry of row switch
   120 00000152 49FFC0                  				inc r8					;Inc Column Counter
   121 00000155 4D31C9                  				xor r9, r9				;Reset Row Counter
   122 00000158 EBCE                    				jmp .alloc				;Continue alloc loop
   123                                  	
   124                                  	.find_path:
   125                                  		;store addr of target node in r15
   126 0000015A 488B05(00000000)        		mov rax, [Grid.TargetX]
   127 00000161 488B1D(00000000)        		mov rbx, [Grid.TargetY]
   128 00000168 488B15(00000000)        		mov rdx, [Grid.MapWidth]
   129 0000016F E8(00000000)            		call _Node2D.GetByCoordinates
   130 00000174 4989CF                  		mov r15, rcx
   131                                  		;store addr of starting node as first and last on open list
   132 00000177 488B05(00000000)        		mov rax, [Grid.StartX]
   133 0000017E 488B1D(00000000)        		mov rbx, [Grid.StartY]
   134 00000185 488B15(00000000)        		mov rdx, [Grid.MapWidth]
   135 0000018C E8(00000000)            		call _Node2D.GetByCoordinates
   136 00000191 48890D(00000000)        		mov qword [Grid.PStartNode], rcx
   137 00000198 48890D(00000000)        		mov qword [NodeOpenList.First], rcx
   138 0000019F 48890D(00000000)        		mov qword [NodeOpenList.Last], rcx
   139                                  		;inc open list count
   140 000001A6 48FF05(00000000)        		inc qword [NodeOpenList.Count]			
   141                                  		;find path sequence
   142 000001AD 4D31E4                  		xor r12, r12
   143                                  		.next_open:
   144 000001B0 4C8B35(00000000)        			mov r14, [NodeOpenList.First]		;Get current node
   145 000001B7 4D31DB                  			xor r11, r11						;Reset r11
   146 000001BA 49BD-                   			mov r13, Node.AdjecentOffsets		;Starting Adjecent Offset
   146 000001BC [0000000000000000] 
   147                                  			;update the current node adjecent nodes
   148                                  			.next_adjecent:
   149 000001C4 498B4500                				mov rax, [r13]					;ARG: OffsetX
   150 000001C8 498B5D08                				mov rbx, [r13 + 8]				;ARG: OffsetY
   151 000001CC 4C89F7                  				mov rdi, r14					;ARG: CurrentNode
   152 000001CF 4C89FE                  				mov rsi, r15					;ARG: TargetNode
   153 000001D2 E8(00000000)            				call _Node.UpdateAdjecentNode	;Call UpdateAdjecentNode
   154 000001D7 4883F905                				cmp rcx, 5						;Check if target is found
   155 000001DB 745A                    				jz .path_found					;Jump to "path found" if it is
   156 000001DD 4983C510                				add r13, 16						;Add 16 to offset
   157 000001E1 49FFC3                  				inc r11							;Inc Iteration Counter
   158 000001E4 4983FB08                				cmp r11, 8						;Check for last offset
   159 000001E8 75DA                    			jnz .next_adjecent					;If last offset, terminate adjecent loop
   160                                  			;update the current node
   161 000001EA 4D8B9E[00000000]        			mov r11, [r14 + Node.PNext]			;Get next node in open list
   162 000001F1 49C786[00000000]FF-     			mov qword [r14 + Node.PNext], -1	;Remove current node from open list
   162 000001F9 FFFFFF             
   163 000001FC 4C891D(00000000)        			mov [NodeOpenList.First], r11		;Set next node as first in open list
   164 00000203 48FF0D(00000000)        			dec qword [NodeOpenList.Count]		;Dec open list count
   165 0000020A 49C786[00000000]00-     			mov qword [r14 + Node.Closed], 0	;Close current node
   165 00000212 000000             
   166                                  			;check for failure
   167 00000215 49FFC4                  			inc r12								;Inc Iteration Counter
   168 00000218 48833D(00000000)00      			cmp qword [NodeOpenList.Count], 0	;Check if open list is empty
   169 00000220 743D                    			jz .no_path_found					;Jump to "no path" if it is
   170 00000222 4C3B25(00000000)        			cmp r12, [Grid.OutBufferSize]		;Check if path is too long
   171 00000229 7D34                    			jge .no_path_found					;Jump to "no path" if it is
   172 0000022B EB83                    			jmp .next_open						;Else, check next open node
   173                                  		.path_found:
   174 0000022D 4C89F8                  			mov rax, r15
   175 00000230 488B1D(00000000)        			mov rbx, [Grid.POutBuffer]
   176 00000237 4831C9                  			xor rcx, rcx
   177 0000023A 4831D2                  			xor rdx, rdx
   178 0000023D 4831FF                  			xor rdi, rdi
   179 00000240 488B35(00000000)        			mov rsi, [Grid.PStartNode]
   180 00000247 E8(00000000)            			call _Node.Traceback
   181 0000024C 4889C8                  			mov rax, rcx
   182 0000024F E8(00000000)            			call _Node.Empty
   183 00000254 C3                      			ret
   184                                  		.no_path_found:
   185 00000255 48C7C0FFFFFFFF          			mov rax, -1
   186 0000025C E8(00000000)            			call _Node.Empty
   187 00000261 C3                      			ret
   188                                  			
