     1                                  [BITS 64]
     2                                  [SECTION .text]
     3                                  [GLOBAL DllMain]
     4                                  [GLOBAL FindPath]
     5                                  [EXPORT DllMain]
     6                                  [EXPORT FindPath]
     7                                  ;From _Node:
     8                                  [EXTERN _Node.Ctor]
     9                                  [EXTERN _Node.UpdateAdjecentNode]
    10                                  [EXTERN _Node.Empty]
    11                                  [EXTERN _Node.Traceback]
    12                                  ;From _Node2D:
    13                                  [EXTERN _Node2D.GetByCoordinates]
    14                                  ;From Data - Node
    15                                  [EXTERN Node.Closed]
    16                                  [EXTERN Node.Traversable]
    17                                  [EXTERN Node.Size]
    18                                  [EXTERN Node.PNext]
    19                                  [EXTERN Node.HCost]
    20                                  [EXTERN Node.FCost]
    21                                  [EXTERN Node.AdjecentOffsets]
    22                                  ;From Data - NodeStack
    23                                  [EXTERN NodeStack.Bottom]
    24                                  [EXTERN NodeStack.Count]
    25                                  ;From Data - NodeOpenList
    26                                  [EXTERN NodeOpenList.First]
    27                                  [EXTERN NodeOpenList.Last]
    28                                  [EXTERN NodeOpenList.Count]
    29                                  ;From Data - Grid
    30                                  [EXTERN Grid.TargetX]
    31                                  [EXTERN Grid.TargetY]
    32                                  [EXTERN Grid.StartX]
    33                                  [EXTERN Grid.StartY]
    34                                  [EXTERN Grid.PStartNode]
    35                                  [EXTERN Grid.MapWidth]
    36                                  [EXTERN Grid.MapHeight]
    37                                  [EXTERN Grid.POutBuffer]
    38                                  [EXTERN Grid.OutBufferSize]
    39                                  [EXTERN Grid.PMap]
    40                                  ;TEST
    41                                  [EXTERN TestData.PMap]
    42                                  [EXTERN TestData.POutBuffer]
    43                                  [DEFAULT REL]
    44                                  
    45                                  DllMain:
    46                                  	;mov	ecx, 0					;nStartX@0
    47                                  	;mov edx, 0						;nStartY@8
    48                                  	;mov r8d, 31					;nTargetX@16
    49                                  	;mov r9d, 31					;nTargetX@24
    50                                  	;mov rax, TestData.PMap			;pMap@32
    51                                  	;mov [rsp + 32], rax	
    52                                  	;mov eax, 32 					;nMapWidth@40
    53                                  	;mov [rsp + 40], eax			
    54                                  	;mov eax, 32  					;nMapHeight@48
    55                                  	;mov [rsp + 48], eax			
    56                                  	;mov rax, TestData.POutBuffer	;pOutBuffer@56
    57                                  	;mov [rsp + 56], rax
    58                                  	;mov eax, 1024					;nOutBufferSize@64
    59                                  	;mov [rsp + 64], eax							
    60                                  	;call FindPath
    61 00000000 B801000000                  mov eax, 1
    62 00000005 C3                          ret
    63                                  
    64                                  FindPath:
    65                                  	;failsafe: varify grid values
    66 00000006 3B4C2430                	cmp ecx, [rsp + 48]
    67 0000000A 0F8D52020000            	jge .no_path_found
    68 00000010 83F900                  	cmp ecx, 0
    69 00000013 0F8C49020000            	jl .no_path_found
    70 00000019 3B542438                	cmp edx, [rsp + 56]
    71 0000001D 0F8D3F020000            	jge .no_path_found
    72 00000023 83FA00                  	cmp edx, 0
    73 00000026 0F8C36020000            	jl .no_path_found
    74 0000002C 443B442430              	cmp r8d, [rsp + 48]
    75 00000031 0F8D2B020000            	jge .no_path_found
    76 00000037 4183F800                	cmp r8d, 0
    77 0000003B 0F8C21020000            	jl .no_path_found
    78 00000041 443B4C2438              	cmp r9d, [rsp + 56]
    79 00000046 0F8D16020000            	jge .no_path_found
    80 0000004C 4183F900                	cmp r9d, 0
    81 00000050 0F8C0C020000            	jl .no_path_found
    82                                  	;initialize "per execution" tls data
    83 00000056 4889E5                  	mov rbp, rsp
    84 00000059 6A00                    	push qword 0			;Grid.PStartNode@80
    85 0000005B 488B4528                	mov rax, [rbp + 40]		;Grid.PMap@72
    86 0000005F 50                      	push rax				
    87 00000060 488B4540                	mov rax, [rbp + 64]		;Grid.POutBuffer@64
    88 00000064 50                      	push rax				
    89 00000065 488B4548                	mov rax, [rbp + 72]		;Grid.OutBufferSize62
    90 00000069 6650                    	push ax					
    91 0000006B 488B4538                	mov rax, [rbp + 56]		;Grid.MapHeight60
    92 0000006F 6650                    	push ax					
    93 00000071 488B4530                	mov rax, [rbp + 48]		;Grid.MapWidth58
    94 00000075 6650                    	push ax					
    95 00000077 664151                  	push r9w				;Grid.TargetY56
    96 0000007A 664150                  	push r8w				;Grid.TargetX54
    97 0000007D 6652                    	push dx					;Grid.StartY52
    98 0000007F 6651                    	push cx					;Grid.StartX50
    99 00000081 666A00                  	push word 0				;Grid.ShadowBytes48
   100 00000084 6A00                    	push qword 0			;NodeOpenList.Count@40
   101 00000086 6A00                    	push qword 0			;NodeOpenList.Last@32
   102 00000088 6A00                    	push qword 0			;NodeOpenList.First@24
   103 0000008A 6A00                    	push qword 0			;NodeStack.Count@16
   104 0000008C 6A00                    	push qword 0			;NodeStack.Bottom@8
   105 0000008E 6A00                    	push qword 0			;NodeStack.Top@0
   106 00000090 4889E5                  	mov rbp, rsp			;Save a ptr to the thread local storage
   107                                  	;initialize values for node creation
   108 00000093 4889A5[00000000]        	mov [rbp + NodeStack.Bottom], rsp   			;Set bottom node to stack pointer
   109 0000009A 4881AD[00000000]-       	sub qword [rbp + NodeStack.Bottom], Node.Size	;Add size bottom node
   109 000000A1 [00000000]         
   110 000000A5 6631C9                  	xor cx, cx										;Clean rcx
   111 000000A8 4D31C0                  	xor r8, r8				 	  					;Row Counter
   112 000000AB 4D31C9                  	xor r9, r9				  						;Col Counter
   113 000000AE 4D31D2                  	xor r10, r10 				  					;Node Counter
   114 000000B1 4C8B9D[00000000]        	mov r11, [rbp + Grid.PMap]			  			;Pointer to map buffer
   115 000000B8 4C8BA5[00000000]        	mov r12, [rbp + Grid.MapWidth]					;Move MapWidth into r12	
   116 000000BF 4C8BAD[00000000]        	mov r13, [rbp + Grid.MapHeight]					;Move MapHieght into r13
   117 000000C6 4981E4FFFF0000          	and r12, 0xFFFF									;convert word of r12 into qword
   118 000000CD 4981E5FFFF0000          	and r13, 0xFFFF									;convert word of r13 into qword
   119 000000D4 4D0FAFE5                	imul r12, r13									;Multiply r12 with MapHeight
   120                                  	;create nodes on stack from grid
   121                                  	.alloc:									;Entry of stack alloction loop
   122 000000D8 4D39E2                  		cmp r10, r12						;Check for last node in map 
   123 000000DB 742F                    		jz .find_path						;If last node, terminate alloc loop
   124 000000DD 66443B8D[00000000]      			cmp r9w, [rbp + Grid.MapWidth]	;Check for last node in row
   125 000000E5 741D                    			jz .switch_row					;If last node in row, row switch
   126 000000E7 664489C8                			mov ax, r9w						;ARG: X
   127 000000EB 664489C3                			mov bx, r8w						;ARG: Y
   128 000000EF 438A0C13                			mov cl, [r11+r10]				;ARG: Traversable
   129 000000F3 66BA0100                			mov dx, 1						;ARG: Resistance
   130 000000F7 E8(00000000)            			call _Node.Ctor					;Call Constructor
   131 000000FC 49FFC2                  			inc r10							;Inc Node Counter
   132 000000FF 49FFC1                  			inc r9							;Inc Row Counter
   133 00000102 EBD4                    			jmp .alloc						;Continue alloc loop
   134                                  			.switch_row:					;Entry of row switch
   135 00000104 49FFC0                  				inc r8						;Inc Column Counter
   136 00000107 4D31C9                  				xor r9, r9					;Reset Row Counter
   137 0000010A EBCC                    				jmp .alloc					;Continue alloc loop
   138                                  	
   139                                  	.find_path:
   140                                  		;store addr of target node in r15
   141 0000010C 668B85[00000000]        		mov ax, [rbp + Grid.TargetX]
   142 00000113 668B9D[00000000]        		mov bx, [rbp + Grid.TargetY]
   143 0000011A 668B95[00000000]        		mov dx, [rbp + Grid.MapWidth]
   144 00000121 4825FFFF0000            		and rax, 0XFFFF
   145 00000127 4881E3FFFF0000          		and rbx, 0XFFFF
   146 0000012E 4881E2FFFF0000          		and rdx, 0XFFFF
   147 00000135 E8(00000000)            		call _Node2D.GetByCoordinates
   148 0000013A 6683B9[00000000]00      		cmp word [rcx + Node.Traversable], 0
   149 00000142 0F8422010000            		jz .no_path_found_1
   150 00000148 4989CF                  		mov r15, rcx
   151                                  		;store addr of starting node as first and last on open list
   152 0000014B 668B85[00000000]        		mov ax, [rbp + Grid.StartX]
   153 00000152 668B9D[00000000]        		mov bx, [rbp + Grid.StartY]
   154 00000159 668B95[00000000]        		mov dx, [rbp + Grid.MapWidth]
   155 00000160 E8(00000000)            		call _Node2D.GetByCoordinates
   156 00000165 6683B9[00000000]00      		cmp word [rcx + Node.Traversable], 0
   157 0000016D 0F8400010000            		jz .no_path_found_2
   158 00000173 48898D[00000000]        		mov qword [rbp + Grid.PStartNode], rcx
   159 0000017A 48898D[00000000]        		mov qword [rbp + NodeOpenList.First], rcx
   160 00000181 488989[00000000]        		mov qword [rcx + Node.PNext], rcx
   161 00000188 48C781[00000000]FF-     		mov qword [rcx + Node.HCost], 0x1FFFFFFF
   161 00000190 FFFF1F             
   162 00000193 48C781[00000000]FF-     		mov qword [rcx + Node.FCost], 0x1FFFFFFF
   162 0000019B FFFF1F             
   163 0000019E 48FF85[00000000]        		inc qword [rbp + NodeOpenList.Count]			;Inc open list count		
   164                                  		;find path sequence
   165 000001A5 664531E4                		xor r12w, r12w
   166                                  		.next_open:
   167                                  			;ready current node, store
   168 000001A9 4C8BB5[00000000]        			mov r14, [rbp + NodeOpenList.First]			;Get new current node
   169 000001B0 4883BD[00000000]FF      			cmp qword [rbp + NodeOpenList.First], -1	;Check that current node has a valid link
   170 000001B8 0F84BE000000            			jz .no_path_found_3							;Jump to "no path" if it doesn't
   171 000001BE 6641C786[00000000]-     			mov word [r14 + Node.Closed], 1				;Close current node
   171 000001C6 0100               
   172                                  			;ready NodeOpenList.First node, pop
   173 000001C8 4D8B9E[00000000]        			mov r11, [r14 + Node.PNext]					;Get current.PNext
   174 000001CF 4C899D[00000000]        			mov [rbp + NodeOpenList.First], r11			;Set OpenList.First to current.PNext
   175 000001D6 49C786[00000000]FF-     			mov qword [r14 + Node.PNext], -1			;Current - set PNext to -1 
   175 000001DE FFFFFF             
   176                                  			;check if open list is empty
   177 000001E1 4883BD[00000000]00      			cmp qword [rbp + NodeOpenList.Count], 0		;Cmp OpenList.Count = 0
   178 000001E9 0F8496000000            			jz .no_path_found_4							;Jump to "no path" if it is
   179 000001EF 48FF8D[00000000]        			dec qword [rbp + NodeOpenList.Count]		;Else dec open list count
   180                                  			;ready adjecent check proc
   181 000001F6 4D31DB                  			xor r11, r11								;Reset r11
   182 000001F9 49BD-                   			mov r13, Node.AdjecentOffsets				;Starting Adjecent Offset
   182 000001FB [0000000000000000] 
   183                                  			;update the current node adjecent nodes
   184                                  			.next_adjecent:
   185 00000203 4831C0                  				xor rax, rax							;Reset rax
   186 00000206 4831DB                  				xor rbx, rbx							;Reset rbx
   187 00000209 66418B4500              				mov ax, word [r13]						;ARG: OffsetX
   188 0000020E 66418B5D08              				mov bx, word [r13 + 8]					;ARG: OffsetY
   189 00000213 E8(00000000)            				call _Node.UpdateAdjecentNode			;Call UpdateAdjecentNode
   190 00000218 4883F905                				cmp rcx, 5								;Check if target is found
   191 0000021C 7420                    				jz .path_found							;Jump to "path found" if it is
   192 0000021E 4983C510                				add r13, 16								;Add 16 to offset
   193 00000222 49FFC3                  				inc r11									;Inc Iteration Counter
   194 00000225 4983FB08                				cmp r11, 8								;Check for last offset
   195 00000229 75D8                    			jnz .next_adjecent							;If last offset, terminate adjecent loop
   196                                  			;check if we are above max path length
   197 0000022B 6641FFC4                			inc r12w									;Inc Iteration Counter
   198 0000022F 66443BA5[00000000]      			cmp r12w, word [rbp + Grid.OutBufferSize]	;Check if path is too long
   199 00000237 7D55                    			jge .no_path_found_5						;Jump to "no path" if it is
   200 00000239 E96BFFFFFF              			jmp .next_open								;Else, check next open node
   201                                  		.path_found:
   202 0000023E 4C89F8                  			mov rax, r15
   203 00000241 488B9D[00000000]        			mov rbx, [rbp + Grid.POutBuffer]
   204 00000248 4831C9                  			xor rcx, rcx
   205 0000024B 4831D2                  			xor rdx, rdx
   206 0000024E 4831FF                  			xor rdi, rdi
   207 00000251 488BB5[00000000]        			mov rsi, [rbp + Grid.PStartNode]
   208 00000258 E8(00000000)            			call _Node.Traceback
   209 0000025D 4889C8                  			mov rax, rcx
   210 00000260 EB35                    			jmp .pf_done
   211                                  		.no_path_found:
   212 00000262 48C7C0FFFFFFFF          			mov rax, -1
   213 00000269 C3                      			ret
   214                                  		.no_path_found_1:
   215 0000026A 48C7C0FEFFFFFF          			mov rax, -2
   216 00000271 EB24                    			jmp .pf_done
   217                                  		.no_path_found_2:
   218 00000273 48C7C0FDFFFFFF          			mov rax, -3
   219 0000027A EB1B                    			jmp .pf_done
   220                                  		.no_path_found_3:
   221 0000027C 48C7C0FCFFFFFF          			mov rax, -4
   222 00000283 EB12                    			jmp .pf_done
   223                                  		.no_path_found_4:
   224 00000285 48C7C0FBFFFFFF          			mov rax, -5
   225 0000028C EB09                    			jmp .pf_done
   226                                  		.no_path_found_5:
   227 0000028E 48C7C0FAFFFFFF          			mov rax, -6
   228 00000295 EB00                    			jmp .pf_done
   229                                  		.pf_done:
   230 00000297 4989E9                  			mov r9, rbp
   231 0000029A E8(00000000)            			call _Node.Empty
   232 0000029F C3                      			ret
